import "oaidl.idl";
import "ocidl.idl";

namespace CoronaWinRT
{
    enum FieldTypes
    {
        FieldNone,
        FieldDouble,
        FieldInt64,
        FieldString,
        FieldDateTime,
        FieldObject,
        FieldArray,
        FieldReference,
        FieldFunction,
        FieldQuery,
        FieldBlob
    };

    interface IFieldOptions
    {

    };

    runtimeclass DoubleFieldOptions : IFieldOptions
    {
        DoubleFieldOptions();

        Double MinValue ;
        Double MaxValue ;
        String Message ;
    };

    runtimeclass Int64FieldOptions : IFieldOptions
    {
        Int64FieldOptions();

        Int64  MinValue ;
        Int64  MaxValue ;
        String Message ;
    };

    runtimeclass DateTimeFieldOptions : IFieldOptions
    {
        DateTimeFieldOptions();

        Windows.Foundation.DateTime  MinValue;
        Windows.Foundation.DateTime  MaxValue;
        String                       Message;
    };

    runtimeclass ArrayFieldOptions : IFieldOptions
    {
        ArrayFieldOptions();
        FieldTypes                                     FundamentalType;
        Windows.Foundation.Collections.IVector<String> AllowedBaseClasses;
        Windows.Foundation.Collections.IVector<String> AllowedClasses;
    };

    runtimeclass ObjectFieldOptions : IFieldOptions
    {
        ObjectFieldOptions();
        FieldTypes                                     FundamentalType;
        Windows.Foundation.Collections.IVector<String> AllowedBaseClasses;
        Windows.Foundation.Collections.IVector<String> AllowedClasses;
    };

    runtimeclass BasicFilter 
    {
        String FieldName;
        String FieldValue;
    };

    runtimeclass QueryFrom
    {
        String ClassName ;
        String Name ;
        Windows.Foundation.Collections.IVector<BasicFilter> Filters ;
    };

    interface IQueryStage 
    {
        String StageName;
    };

    interface IQueryCondition {
        String ClassName;
    };

    runtimeclass QueryConditionLt : IQueryCondition
    {
        String ValuePath;
        String Value;
    }  ;

    runtimeclass QueryConditionLtEq: IQueryCondition
    {
        String ValuePath;
        String Value;
    }  ;

    runtimeclass QueryConditionEq: IQueryCondition
    {
        String ValuePath;
        String Value;
    }  ;

    runtimeclass QueryConditionGtEq: IQueryCondition
    {
        String ValuePath;
        String Value;
    }  ;

    runtimeclass QueryConditionContains: IQueryCondition
    {
        String ValuePath ;
        String Value ;
    }  ;

    runtimeclass QueryConditionAll: IQueryCondition
    {
        String ValuePath ;
        String Value ;
        Windows.Foundation.Collections.IVector<IQueryCondition> Conditions ;
    };

    runtimeclass QueryConditionAny: IQueryCondition
    {
        String ValuePath ;
        String Value ;
        Windows.Foundation.Collections.IVector<IQueryCondition> Conditions ;
    }  ;

    runtimeclass QueryConditionNone: IQueryCondition
    {
        Windows.Foundation.Collections.IVector<IQueryCondition> Conditions ;
    }  ;

    runtimeclass QueryFilter: IQueryStage
    {
        IQueryCondition Condition ;
    };

    runtimeclass QueryJoin: IQueryStage
    {
        String Source1 ;
        String Source2 ;
        String ResultName1 ;
        String ResultName2 ;
        Windows.Foundation.Collections.IVector<String> Keys ;
    };

    runtimeclass QueryProjectField 
    {
        String FieldName ;
        String ValuePath ;
    };

    runtimeclass QueryProject
    {
        String SourceName ;
        Windows.Foundation.Collections.IVector<QueryProjectField> Projection;
    };

    runtimeclass Query : IQuery
    {
        IQueryFrom From;
        Windows.Foundation.Collections.IVector<IQueryStage> Stages;
    };
    
    runtimeclass QueryFieldOptions : IFieldOptions
    {
        IQuery QueryBody;
    };

    runtimeclass FieldDefinition 
    {
        FieldTypes              FieldType;
        String                  FieldName;
        String                  FieldDescription;
        IFieldOptions           FieldOptions;
    };

    runtimeclass IndexDefinition 
    {
        String                  IndexName;
        Windows.Foundation.Collections.IVector<String> IndexKeys;
    };

    runtimeclass ClassDefinition : IClassDefinition
    {
        String ClassName ;
        String ClassDescription ;
        String BaseClassName ;
        Windows.Foundation.Collections.IVector<IFieldDefinition> Fields ;
        Windows.Foundation.Collections.IVector<IndexDefinition> Indexes ;
        Windows.Foundation.Collections.IVector<String> DescendantClasses ;
        Windows.Foundation.Collections.IVector<String> AncestorClasses ;
    };

    interface IBaseRequest 
    {
        String Token;
    };

    interface IBaseResponse
    {
        String  Message;
        String  Token;
        Boolean Success;
        Double  ExecutionTimeSeconds;
    };

    interface ICoronaBaseObject requires DynamicObject
    {
        
    };

    interface ICoronaObject requires ICoronaBaseObject
    {
        String ClassName;
        Int64 ObjectId;
        Windows.Foundation.DateTime Created;
        String CreatedBy;
        Windows.Foundation.DateTime Updated;
        String UpdatedBy;
    };

    runtimeclass CoronaUser : ICoronaObject
    {
        String UserName ;
        String Email ;
        String Address1 ;
        String Address2 ;
        String City ;
        String State ;
        String Zip ;
    };

    runtimeclass CreateUserRequest : IBaseRequest {
        String Username ;
        String Email ;
        String Address1 ;
        String Address2 ;
        String City ;
        String State ;
        String Zip ;
        String Password1 ;
        String Password2 ;
    };

    runtimeclass CreateUserResponse : IBaseResponse {
        CoronaUser Data;
    };

    runtimeclass LoginUserRequest : IBaseRequest {
        String UserName ;
        String Password ;
    };
    runtimeclass LoginUserResponse: IBaseResponse {
        CoronaUser Data ;
    };

    runtimeclass ConfirmUserRequest: IBaseRequest  {
        String Email ;
        String ValidationCode ;
    };
    runtimeclass ConfirmUserResponse : IBaseResponse {
        CoronaUser Data ;
    };

    runtimeclass SendUserRequest : IBaseRequest {
        String Email ;
    };
    runtimeclass SendUserResponse : IBaseResponse{
        CoronaUser Data ;
    };

    runtimeclass PasswordUserRequest : IBaseRequest {
        String UserName ;
        String ValidationCode ;
        String Password1 ;
        String Password2 ; 
    };
    runtimeclass PasswordUserResponse : IBaseResponse{
        CoronaUser Data ;
    };
    runtimeclass GetClassRequest: IBaseRequest  {
        String ClassName;
    };
    runtimeclass GetClassResponse : IBaseResponse{
        Windows.Foundation.Collections.IVector<ClassDefinition> Classes;
    };

    runtimeclass GetClassesRequest: IBaseRequest  {
        
    };
    runtimeclass GetClassesResponse : IBaseResponse{
        Windows.Foundation.Collections.IVector<ClassDefinition> Classes;
    };

    runtimeclass PutClassesRequest: IBaseRequest  {
        ClassDefinition ClassDef;
    };
    runtimeclass PutClassesResponse: IBaseResponse {
        CoronaObject Data;
    };
    runtimeclass GetObjectRequest : IBaseRequest 
    {
        String ClassName;
        Int64  ObjectId;
    };
    runtimeclass GetObjectResponse : IBaseResponse{
        CoronaObject Data;
    };

    runtimeclass PutObjectsRequest {
        Windows.Foundation.Collections.IVector<CoronaObject> Data;
    };

    runtimeclass PutObjectsResponse : IBaseResponse{
        Windows.Foundation.Collections.IVector<CoronaObject> Data;
    };

    runtimeclass QueryObjectsRequest: IBaseRequest  {
        Query QueryBody;
    };
    runtimeclass QueryObjectsResponse : IBaseResponse{
        Windows.Foundation.Collections.IVector<CoronaBaseObject> Data;
    };

    runtimeclass DeleteObjectsRequest: IBaseRequest  {
        Windows.Foundation.Collections.IVector<CoronaObject> Objects;

    };
    runtimeclass DeleteObjectsResponse : IBaseResponse{
        CoronaObject Data;
    };

    runtimeclass CreateObjectsRequest : IBaseRequest {
        String ClassName;
    };
    runtimeclass CreateObjectsResponse : IBaseResponse{
        CoronaObject Data;
    };

    runtimeclass EditObjectRequest : IBaseRequest {
        String ClassName;
        int64  ObjectId;
    };
    runtimeclass EditObjectResponse : IBaseResponse{
        CoronaObject Data;
    };

    runtimeclass RunObjectRequest : IBaseRequest {
        RunObjectRequest();
        CoronaObject Data;
    };
    runtimeclass RunObjectResponse : IBaseResponse{
        RunObjectResponse();
        CoronaObject Data;
    };

    runtimeclass CopyObjectPath 
    {
        CopyObjectPath();
        String ClassName;
        String Path;
    };

    runtimeclass CopyObjectRequest : IBaseRequest {
        CopyObjectRequest();

        CopyObjectPath      Source;
        CopyObjectPath      Dest;
        CopyObjectPath      Transform;
    };

    runtimeclass CopyObjectResponse : IBaseResponse{
        CoronaObject Data;
    };

    interface ICoronaClient
    {
        Boolean Open();
        Boolean Close();
        
        Windows.Foundation.IAsyncOperation<CreateUserResponse> CreateUser(CreateUserRequest request);
        Windows.Foundation.IAsyncOperation<LoginUserResponse> LoginUser(LoginUserRequest request);
        Windows.Foundation.IAsyncOperation<ConfirmUserResponse> ConfirmUser(ConfirmUserRequest request);
        Windows.Foundation.IAsyncOperation<SendUserResponse> SendUser(SendUserRequest request);
        Windows.Foundation.IAsyncOperation<PasswordUserResponse> PasswordUser(PasswordUserRequest request);
        Windows.Foundation.IAsyncOperation<GetClassResponse> GetClass(GetClassRequest request);
        Windows.Foundation.IAsyncOperation<GetClassesResponse> GetClasses(GetClassesRequest request);
        Windows.Foundation.IAsyncOperation<PutClassesResponse> PutClasses(PutClassesRequest request);
        Windows.Foundation.IAsyncOperation<GetObjectsResponse> GetObjects(GetObjectsRequest request);
        Windows.Foundation.IAsyncOperation<PutObjectsResponse> PutObjects(PutObjectsRequest request);
        Windows.Foundation.IAsyncOperation<QueryObjectsResponse> QueryObjects(QueryObjectsRequest request);
        Windows.Foundation.IAsyncOperation<DeleteObjectsResponse> DeleteObjects(DeleteObjectsRequest request);
        Windows.Foundation.IAsyncOperation<CreateObjectResponse> CreateObject(CreateObjectRequest request);
        Windows.Foundation.IAsyncOperation<EditObjectResponse> EditObject(EditObjectRequest request);
        Windows.Foundation.IAsyncOperation<RunObjectRequest> RunObject(RunObjectRequest request);
        Windows.Foundation.IAsyncOperation<CopyObjectRequest> CopyObject(CopyObjectRequest request);
        
    };

    runtimeclass LocalCoronaClient : ICoronaClient
    {
        LocalCoronaClient();
        String FileName;
    };

    runtimeclass RemoteCoronaClient : ICoronaClient
    {
        RemoteCoronaClient();
        String HostName;
        Int32  Port;
        String Url;
        
    };
}
