import "oaidl.idl";
import "ocidl.idl";

namespace CoronaWinUi
{
    enum FieldTypes
    {
        FieldNone,
        FieldDouble,
        FieldInt64,
        FieldString,
        FieldDateTime,
        FieldObject,
        FieldArray,
        FieldReference,
        FieldFunction,
        FieldQuery,
        FieldBlob
    };

    interface IFieldOptions
    {

    };

    runtimeclass DoubleFieldOptions : IFieldOptions
    {
        Double MinValue ;
        Double MaxValue ;
        String Message ;
    };

    runtimeclass Int64FieldOptions : IFieldOptions
    {
        Int64  MinValue ;
        Int64  MaxValue ;
        String Message ;
    };

    runtimeclass DateTimeFieldOptions : IFieldOptions
    {
        DateTime  MinValue ;
        DateTime  MaxValue ;
        DateTime  Message ;
    };

    runtimeclass ArrayFieldOptions : IFieldOptions
    {
        FieldTypes                                     FundamentalType ;
        Windows.Foundation.Collections.IVector<String> AllowedBaseClasses ;
        Windows.Foundation.Collections.IVector<String> AllowedClasses ;
    };

    runtimeclass ObjectFieldOptions : IFieldOptions
    {
        FieldTypes                                     FundamentalType ;
        Windows.Foundation.Collections.IVector<String> AllowedBaseClasses;
        Windows.Foundation.Collections.IVector<String> AllowedClasses ;
    };

    runtimeclass BasicFilter
    {
        String FieldName ;
        String FieldValue ;
    }

    runtimeclass QueryFrom 
    {
        String ClassName ;
        String Name ;
        Windows.Foundation.Collections.IVector<BasicFilter> Filters ;
    }

    interface IQueryStage
    {
        String StageName ;
    }

    interface IQueryCondition
    {
        String ClassName ;
    }

    runtimeclass QueryConditionLt : IQueryCondition
    {
        String ValuePath ;
        String Value  ;
    }  

    runtimeclass QueryConditionLtEq: IQueryCondition
    {
        String ValuePath  ;
        String Value  ;
    }  

    runtimeclass QueryConditionEq: IQueryCondition
    {
        String ValuePath ;
        String Value ;
    }  

    runtimeclass QueryConditionGtEq: IQueryCondition
    {
        String ValuePath  ;
        String Value ;
    }  

    runtimeclass QueryConditionContains: IQueryCondition
    {
        String ValuePath ;
        String Value ;
    }  

    runtimeclass QueryConditionAll: IQueryCondition
    {
        String ValuePath ;
        String Value ;
        Windows.Foundation.Collections.IVector<ICondition> Conditions ;
    }

    runtimeclass QueryConditionAny: IQueryCondition
    {
        String ValuePath ;
        String Value ;
        Windows.Foundation.Collections.IVector<ICondition> Conditions ;
    }  

    runtimeclass QueryConditionNone: IQueryCondition
    {
        Windows.Foundation.Collections.IVector<ICondition> Conditions ;
    }  

    runtimeclass QueryFilter: IQueryStage
    {
        IQueryCondition Condition ;
    }

    runtimeclass QueryJoin: IQueryStage
    {
        String Source1 ;
        String Source2 ;
        String ResultName1 ;
        String ResultName2 ;
        Windows.Foundation.Collections.IVector<String> Keys ;
    }

    runtimeclass QueryProjectField
    {
        String FieldName ;
        String ValuePath ;
    }

    runtimeclass QueryProject: IQueryStage
    {
        String SourceName ;
        Windows.Foundation.Collections.IVector<QueryProjectField> Projection ;
    }

    runtimeclass Query
    {
        QueryFrom From ;
        Windows.Foundation.Collections.IVector<IQueryStage> Stages ;
    }
    
    runtimeclass QueryFieldOptions : IFieldOptions
    {
        Query QueryBody;
    };

    runtimeclass FieldDefinition
    {
        FieldTypes              FieldType ;
        String                  FieldName ;
        String                  FieldDescription ;
        IFieldOptions           FieldOptions ;
    };

    runtimeclass IndexDefinition
    {
        String                  IndexName ;
        Windows.Foundation.Collections.IVector<String> IndexKeys ;
    };

    runtimeclass ClassDefinition
    {
        String ClassName ;
        String ClassDescription ;
        String BaseClassName ;
        Windows.Foundation.Collections.IVector<FieldDefinition> Fields ;
        Windows.Foundation.Collections.IVector<IndexDefinition> Indexes ;
        Windows.Foundation.Collections.IVector<String> DescendantClasses ;
        Windows.Foundation.Collections.IVector<String> AncestorClasses ;
    };

    interface IBaseRequest
    {
        String Token;
    };

    interface IBaseResponse
    {
        bool   Success ;
        String Message ;
        Double ExecutionTimeSeconds ;
        String Token;
    };

    interface ICoronaObject requires DynamicObject,INotifyPropertyChanged
    {

    }

    runtimeclass CoronaObject : DynamicObject,INotifyPropertyChanged
    {

    }

    runtimeclass CoronaUser : CoronaObject
    {
        String UserName ;
        String Email ;
        String Address1 ;
        String Address2 ;
        String City ;
        String State ;
        String Zip ;
    }

    runtimeclass CreateUserRequest {
        String Username ;
        String Email ;
        String Address1 ;
        String Address2 ;
        String City ;
        String State ;
        String Zip ;
        String Password1 ;
        String Password2 ;
    };
    runtimeclass CreateUserResponse : IBaseResponse {
        CoronaUser Data;
    }

    runtimeclass LoginUserRequest {
        String UserName ;
        String Password ;
    }
    runtimeclass LoginUserResponse: IBaseResponse {
        CoronaUser Data ;
    }

    runtimeclass ConfirmUserRequest {
        String Email ;
        String ValidationCode ;
    }
    runtimeclass ConfirmUserResponse : IBaseResponse {
        CoronaUser Data ;
    }

    runtimeclass SendUserRequest {
        String Email ;
    }
    runtimeclass SendUserResponse : IBaseResponse{
        CoronaUser Data ;
    }

    runtimeclass PasswordUserRequest {
        String UserName ;
        String ValidationCode ;
        String Password1 ;
        String Password2 ; 
    }
    runtimeclass PasswordUserResponse : IBaseResponse{
        CoronaUser Data ;
    }


    runtimeclass GetClassesRequest {
        
    }
    runtimeclass GetClassesResponse : IBaseResponse{
        Windows.Foundation.Collections.IVector<ClassDefinition> Classes;
    }

    runtimeclass PutClassesRequest {
        ClassDefinition ClassDef;
    }
    runtimeclass PutClassesResponse: IBaseResponse {
        
    }

    runtimeclass GetObjectsRequest 
    {
        String ClassName;
        Int64  ObjectId;
    }

    runtimeclass GetObjectsResponse : IBaseResponse
    {
        Windows.Foundation.Collections.IVector<CoronaObject> Objects;
    }

    runtimeclass PutObjectsRequest {
        Windows.Foundation.Collections.IVector<CoronaObject> Objects;
    }

    runtimeclass PutObjectsResponse : IBaseResponse{
        Windows.Foundation.Collections.IVector<CoronaObject> Objects;
    }

    runtimeclass QueryObjectsRequest {
        Query QueryBody;
    }
    runtimeclass QueryObjectsResponse : IBaseResponse{
        Windows.Foundation.Collections.IVector<CoronaObject> Objects;
    }

    runtimeclass DeleteObjectsRequest {
        Windows.Foundation.Collections.IVector<CoronaObject> Objects;

    }
    runtimeclass DeleteObjectsResponse : IBaseResponse{
        
    }

    runtimeclass CreateObjectsRequest {
        String ClassName;
    }
    runtimeclass CreateObjectsResponse : IBaseResponse{
        Windows.Foundation.Collections.IVector<CoronaObject> Objects;
    }

    runtimeclass EditObjectRequest : GetObjectRequest {
        
    }
    runtimeclass EditObjectResponse : IBaseResponse{
        CoronaObject Object;
    }

    runtimeclass RunObjectRequest {
        CoronaObject Object;
    }
    runtimeclass RunObjectResponse : IBaseResponse{
        CoronaObject Object;
    }

    runtimeclass CopyObjectRequest {
        GetObjectRequest SrcObject;
        String SrcPath;
        GetObjectRequest DstObject;
        String DstPath;
    }

    runtimeclass CopyObjectResponse : IBaseResponse{
        CoronaObject Object;
    }

    interface ICoronaClient
    {
        bool Open();
        bool Close();
        
        IAsyncOperation<CreateUserResponse> CreateUser(CreateUserRequest);
        IAsyncOperation<LoginUserResponse> LoginUser(LoginUserRequest);
        IAsyncOperation<ConfirmUserResponse> ConfirmUser(ConfirmUserRequest);
        IAsyncOperation<SendUserResponse> SendUser(SendUserRequest);
        IAsyncOperation<PasswordUserResponse> PasswordUser(PasswordUserRequest);
        IAsyncOperation<GetClassesResponse> GetClasses(GetClassesRequest);
        IAsyncOperation<PutClassesResponse> PutClasses(PutClassesRequest);
        IAsyncOperation<GetObjectsResponse> GetObjects(GetObjectsRequest);
        IAsyncOperation<PutObjectsResponse> PutObjects(PutObjectsRequest);
        IAsyncOperation<QueryObjectsResponse> QueryObjects(QueryObjectsRequest);
        IAsyncOperation<DeleteObjectsResponse> DeleteObjects(DeleteObjectsRequest);
        IAsyncOperation<CreateObjectResponse> CreateObject(CreateObjectRequest);
        IAsyncOperation<EditObjectResponse> EditObject(EditObjectRequest);
        IAsyncOperation<RunObjectRequest> RunObject(RunObjectRequest);
        IAsyncOperation<CopyObjectRequest> CopyObject(CopyObjectRequest);
        
    }

    runtimeclass LocalCoronaClient : ICoronaClient
    {
        String FileName 
    }

    runtimeclass RemoteCoronaClient : ICoronaClient
    {
        String HostName;
        Int32  Port;
        String Url;
        
    }

}
