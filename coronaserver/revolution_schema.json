{
  "schema_name": "Country Video Games Revolution",
  "schema_description": "Schema for the Revolution Server.",
  "schema_version": "1.0",
  "schema_authors": [
    "TJ Bandrowsky"
  ],
  "classes": [

    {
      "class_name": "point",
      "class_description": "a point",
      "base_class_name": "sys_object",
      "fields": {
        "parent_polygon_id": "int64",
        "x": "double",
        "y": "double"
      },
      "indexes": {
        "idx_point_parent_polygon": {
          "index_keys": [ "parent_polygon_id" ]
        }
      }
    },
    {
      "class_name": "shape",
      "class_description": "an item on a slide show",
      "base_class_name": "sys_object",
      "fields": {
        "content_name": "string",
        "parent_shape_id": "int64",
        "border_brush": "string",
        "background_brush": "string",
        "x": "string",
        "y": "string",
        "width": "string",
        "height": "string",
        "padding": "string",
        "margin": "string",
        "layer": "string"
      }
    },
    {
      "class_name": "polygon",
      "class_description": "an item on a slide show",
      "base_class_name": "shape",
      "fields": {
        "points": "[point:parent_polygon_id]"
      }
    },
    {
      "class_name": "layout",
      "class_description": "items on a slide organized into a layout",
      "base_class_name": "shape",
      "fields": {
        "children": "[shape:parent_shape_id]"
      }
    },
    {
      "class_name": "row",
      "class_description": "items on a slide organized into a row",
      "base_class_name": "layout_shape",
      "fields": {

      }
    },
    {
      "class_name": "column",
      "class_description": "items on a slide organized into a row",
      "base_class_name": "layout_shape",
      "fields": {

      }
    },
    {
      "class_name": "absolute",
      "class_description": "items on a slide organized into a row",
      "base_class_name": "layout_shape",
      "fields": {

      }
    },
    {
      "class_name": "text",
      "class_description": "text element",
      "base_class_name": "shape",
      "fields": {
        "text": "string",
        "font_face": "string",
        "font_size": "double",
        "font_weight": "double",
        "font_bold": "bool",
        "font_italic": "bool",
        "font_underline": "bool",
        "font_strikethrough": "bool"
      }
    },
    {
      "class_name": "title",
      "class_description": "title text",
      "base_class_name": "text",
      "fields": {
      }
    },
    {
      "class_name": "subtitle",
      "class_description": "sub title text",
      "base_class_name": "text",
      "fields": {
      }
    },
    {
      "class_name": "chaptertitle",
      "class_description": "chapter title text",
      "base_class_name": "text",
      "fields": {
      }
    },
    {
      "class_name": "chaptersubtitle",
      "class_description": "chapter subtitle text",
      "base_class_name": "text",
      "fields": {
      }
    },
    {
      "class_name": "paragraph",
      "class_description": "title text",
      "base_class_name": "text",
      "fields": {
      }
    },
    {
      "class_name": "link",
      "class_description": "a link",
      "base_class_name": "text",
      "fields": {
        "url": "string"
      }
    },
    {
      "class_name": "image",
      "class_description": "image element",
      "base_class_name": "shape",
      "fields": {
        "image_file_name": "string",
        "image_mime_type": "string"
      }
    },
    {
      "class_name": "slide",
      "class_description": "an page in a presentation",
      "base_class_name": "absolute",
      "fields": {
        "parent_presentation": "int64"
      }
    },
    {
      "class_name": "presentation",
      "class_description": "a slide show, content",
      "base_class_name": "sys_good",
      "fields": {
        "parent_object": "int64",
        "presentation_name": "string",
        "presentation_description": "string",
        "slides": "[slide:parent_presentation]"
      }
    },

    {
      "class_name": "test_question_answer",
      "class_description": "one of the presented answers to a multiple choice question",
      "base_class_name": "sys_object",
      "fields": {
        "test_question_id": "int64",
        "short_answer": "string",
        "about_answer": "presentation:parent_object",
        "correct": "bool",
        "teachback": "string",
        "order": "number"
      }
    },
    {
      "class_name": "test_question",
      "class_description": "a question on an exam",
      "base_class_name": "sys_object",
      "fields": {
        "question_text": "string",
        "question_answers": "[test_question_answer:test_question_id]"
      }
    },
    {
      "class_name": "test_key",
      "class_description": "an answer to a question by a user",
      "base_class_name": "presentation",
      "fields": {
        "test_name": "string",
        "test_description": "string",
        "test_questions": "[string]"
      }
    },
    {
      "class_name": "test_key",
      "class_description": "an answer to a question by a user",
      "base_class_name": "presentation",
      "fields": {
        "test_name": "string",
        "test_description": "string",
        "test_questions": "[string]"
      }
    },
    {
      "class_name": "test",
      "class_description": "a test taken by a user",
      "base_class_name": "presentation",
      "fields": {
        "actor": "->sys_actor",
        "test": "->sys_",
        "answers": "string"
      }
    },

    {
      "class_name": "course",
      "class_description": "a course, with exams",
      "base_class_name": "presentation",
      "fields": {

      }
    },

    {
      "class_name": "front",
      "class_description": "an area of competitive activity",
      "base_class_name": "sys_place",
      "fields": {
        "front_name": "string",
        "front_description": "string",
        "documents": "[presentation:parent_object]"
      }
    },


    {
      "class_name": "book",
      "class_description": "a collection of presentations",
      "base_class_name": "sys_good",
      "fields": {
        "book_name": "string",
        "book_description": "string",
        "book_authors": "string",
        "book_isbn": "string",
        "book_url": "string",
        "book_presentations": "[presentation:parent_object]",
        "book_academy": "int64",
        "creation_time_window": "string"
      },
      "indexes": {
        "idx_book_academy": {
          "index_fields": [ "book_academy" ]
        }
      }
    },
    {
      "class_name": "academy",
      "class_description": "a collection of books and tests",
      "base_class_name": "front",
      "fields": {
        "creation_time_window": "string",
        "books": "[book]"
      }
    },

    {
      "class_name": "vote_option",
      "class_description": "one or more choices for a decision",
      "base_class_name": "sys_actor",
      "fields": {
        "parent_decision": "int64",
        "option": "string"
      }
    },
    {
      "class_name": "vote",
      "class_description": "an election selection of a decision",
      "base_class_name": "sys_actor",
      "fields": {
        "parent_decision": "int64",
        "choice": "->vote_choice"
      }
    },
    {
      "class_name": "election_decision",
      "class_description": "an election decision",
      "base_class_name": "sys_place",
      "fields": {
        "question": "string",
        "description": "string",
        "choices": "[vote_option:parent_decision]",
        "about": "[presentation:parent_object_id]",
        "votes": "[vote:parent_decision]"
      }
    },

    {
      "class_name": "election_person",
      "class_description": "election_person",
      "base_class_name": "sys_actor",
      "fields": {
        "parent_election": "int64",
        "incumbent": "bool",
        "first_name": "string",
        "last_name": "string",
        "contact_url": "string",
        "contact_email": "string",
        "address1": "string",
        "address2": "string",
        "city": "string",
        "state": "string",
        "zip": "string",
        "about": "[presentation:parent_object]",
        "election_candidate": "int64",
        "election_incumbent": "int64"
      },
      "indexes": {
        "idx_person_election_candidate": {
          "index_keys": [ "election_candidate" ]
        },
        "idx_person_election_incumbent": {
          "index_keys": [ "election_incumbent" ]
        }
      }
    },
    {
      "class_name": "election_campaign",
      "class_description": "an election to win",
      "base_class_name": "election_decision",
      "fields": {
        "candidates": "[sys_election_player:election_candidate]",
        "incumbent": "sys_election_player:election_incumbent"
      }
    },
    {
      "class_name": "elect_president",
      "class_description": "elect a president",
      "base_class_name": "election_campaign",
      "fields": {
      }
    },
    {
      "class_name": "elect_senate",
      "class_description": "elect a us senator",
      "base_class_name": "election_campaign",
      "fields": {
        "state": "string"
      }
    },
    {
      "class_name": "elect_congress",
      "class_description": "elect a us congress",
      "base_class_name": "election_campaign",
      "fields": {
        "state": "string",
        "district": "string"
      }
    },
    {
      "class_name": "elect_governor",
      "class_description": "elect a governor",
      "base_class_name": "election_campaign",
      "fields": {

      }
    },
    {
      "class_name": "elect_state_rep",
      "class_description": "elect a state representative",
      "base_class_name": "election_campaign",
      "fields": {
        "state": "string",
        "district": "string"
      }
    },
    {
      "class_name": "elect_state_senator",
      "class_description": "elect a state senator",
      "base_class_name": "election_campaign",
      "fields": {
        "state": "string",
        "district": "string"
      }
    },
    {
      "class_name": "elect_mayor",
      "class_description": "elect a mayor",
      "base_class_name": "election_campaign",
      "fields": {
        "state": "string",
        "city": "string"
      }
    },
    {
      "class_name": "elect_county",
      "class_description": "elect a county",
      "base_class_name": "election_campaign",
      "fields": {
        "state": "string",
        "county": "string",
        "title": "string"
      }
    },
    {
      "class_name": "elections_front",
      "class_description": "elect the revolution",
      "base_class_name": "front",
      "fields": {
        "elections": "[election_campaign:investment_front_id]"
      }
    },

    {
      "class_name": "invested_product",
      "class_description": "a product invested in",
      "base_class_name": "sys_actor",
      "fields": {
        "investment_id": "int64",
        "investment_product_name": "string",
        "investment_product_description": "string",
        "investment_amount": "double",
        "investment_currency": "double"
      },
      "indexes": {
        "idx_invested_product_investment": {
          "index_keys": "investment_id"
        }
      }
    },
    {
      "class_name": "invested_treaty",
      "class_description": "an alliance between the investor and the revolution",
      "base_class_name": "invested_product",
      "fields": {
        "for_revolution": "string",
        "for_investor": "string",
        "terms": "string",
        "effective": "datetime",
        "expiration": "datetime"
      }
    },
    {
      "class_name": "invested_good_subscription",
      "class_description": "a good an investor can subscribe to",
      "base_class_name": "invested_product",
      "fields": {
        "subscribed_goods": "[sys_good]",
        "delivered_goods": "[sys_good]"
      }
    },
    {
      "class_name": "invested_software_support",
      "class_description": "paying for features or supporting the cause",
      "base_class_name": "invested_product",
      "fields": {
        "request_name": "string",
        "request_charter": "string",
        "request_description": "string",
        "request_details": "[presentation:parent_object]",
        "request_accepted_delivery_date": "datetime",
        "request_accepted_signature": "string",
        "request_accepted_date": "datetime",
        "request_accepted_user_id": "int64",
        "delivery_signature": "string",
        "delivery_date": "datetime"
      }
    },
    {
      "class_name": "investment",
      "class_description": "someone who has made a real investment in the revolution",
      "base_class_name": "sys_actor",
      "fields": {
        "investor_alias": "string",
        "investor_description": "string",
        "investment_amount": "double",
        "investment_currency": "double",
        "investment_expectations": "[presentation:parent_object]",
        "investment_products": "[invested_product:investment_id]",
        "investment_front": "int64",
        "investment_decision": "election_decision"
      },
      "indexes": {
        "invest_front_investment": {
          "index_keys": [ "investment_front" ]
        }
      }
    },
    {
      "class_name": "invest_front",
      "class_description": "attract investors",
      "base_class_name": "front",
      "fields": {
        "investments": "[investment:investment_front_id]"
      }
    },


    {
      "class_name": "invention",
      "class_description": "automation of a job",
      "base_class_name": "sys_actor",
      "fields": {
        "invention_title": "string",
        "invention_description": "string",
        "invention_job_automated": "string",
        "invention_solution": "[presentation:parent_object]",
        "invention_requirements": "[presentation:parent_object]",
        "invention_design": "[presentation:parent_object]",
        "invention_fabrication": "[presentation:parent_object]",
        "invention_name": "string",
        "parent_invention": "int64",
        "child_inventions": "[invent:parent_invention]"
      }
    },
    {
      "class_name": "invention_front",
      "class_description": "improve our movement by automating theirs",
      "base_class_name": "front",
      "fields": {
        "inventions": "[invention:parent_invention]"
      }
    },



    {
      "class_name": "risk",
      "class_description": "a risk of an accident along with its repair",
      "base_class_name": "sys_actor",
      "fields": {
        "about": "[presentation:parent_object]",
        "damage": "string",
        "repair": "string",
        "cost": "string",
        "probability_second": "double",
        "cool_down": "double",
        "damage_control": "int64"
      },
      "indexes": {
        "idx_damage_control_risk": {
          "index_keys": [ "damage_control" ]
        }
      }
    },
    {
      "class_name": "risk_trauma",
      "class_description": "improve our movement by automating theirs",
      "base_class_name": "repair_risk",
      "fields": {
      }
    },
    {
      "class_name": "risk_infection",
      "class_description": "viral, bacterial infections",
      "base_class_name": "repair_risk",
      "fields": {
      }
    },
    {
      "class_name": "risk_lifelong",
      "class_description": "lifelong injury",
      "base_class_name": "repair_risk",
      "fields": {
      }
    },
    {
      "class_name": "risk_old_age",
      "class_description": "the risk of living past your usefulness",
      "base_class_name": "repair_risk",
      "fields": {
      }
    },
    {
      "class_name": "risk_natural_disaster",
      "class_description": "natural disaster insurance including colossal human screwups",
      "base_class_name": "repair_risk",
      "fields": {
      }
    },
    {
      "class_name": "risk_accidents",
      "class_description": "risk of minor screwups damaging your property",
      "base_class_name": "repair_risk",
      "fields": {
      }
    },
    {
      "class_name": "risk_sabotage",
      "class_description": "risk of people intentually stealing or damaging your property",
      "base_class_name": "repair_risk",
      "fields": {
      }
    },

    {
      "class_name": "risk_management",
      "class_description": "voluntary insurances",
      "base_class_name": "front",
      "fields": {
        "reserves": "[sys_money]",
        "insurances": "[repair_risk:repair_risk]"
      }
    },

    {
      "class_name": "borders",
      "class_description": "an area where the actor must control",
      "base_class_name": "sys_place",
      "fields": {
      }
    },
    {
      "class_name": "health_",
      "class_description": "health interventions",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "crimefighting",
      "class_description": "crime protections",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "firefighting",
      "class_description": "fire prevention and mitigation",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "floodfighting",
      "class_description": "flood prevention and mitigation",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "quakefighting",
      "class_description": "quake prevention and mitigation",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "spacefighting",
      "class_description": "impact preventation, exploration, and mitigation",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "seafighting",
      "class_description": "fighting on the seas, against other craft or just bad seas",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "airfighting",
      "class_description": "fighting things in the air or just bad air",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "landfighting",
      "class_description": "all the land that rightfully belongs to us",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "spiritfighting",
      "class_description": "keeping the forces of darkness at bay",
      "base_class_name": "boundary",
      "fields": {
      }
    },
    {
      "class_name": "border_control",
      "class_description": "keep the invaders away and allies in play",
      "base_class_name": "front",
      "fields": {
        "borders": "[ boundary ]"
      }
    },

    {
      "class_name": "justice_case",
      "class_description": "just a bunch of political prisoners being",
      "base_class_name": "sys_place",
      "fields": {
        "plaintiff": "string",
        "defendant": "string"
      }
    },

    {
      "class_name": "justice_front",
      "class_description": "just a bunch of political prisoners being",
      "base_class_name": "front",
      "fields": {

      }
    },
    {
      "class_name": "govern",
      "class_description": "provisionary revolution government",
      "base_class_name": "sys_scenario",
      "fields": {
        "aims": "presentation:parent_object",
        "fronts": "[ front ]"
      }
    }
  ],
  "users": [

  ],
  "datasets": [

  ]
}